# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: osrf/ros2:nightly

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - package-xml-{{ checksum "package.xml" }}
          # fallback to using the latest cache if no exact match is found
          - package-xml-

      - run:
          name: Install Dependencies
          command: |
            echo "Working Directory: `pwd`" > install_dependencies_output
            mkdir -p src
            sudo apt install ros-dashing-py-trees
            cd src && git clone https://github.com/splintered-reality/py_trees_ros_interfaces
#            python3 -m venv venv >> install_dependencies_output
#            . venv/bin/activate >> install_dependencies_output
#            pip install -e .[test] >> install_dependencies_output

      - save_cache:
          paths:
            - ./venv
          key: setup-py-{{ checksum "setup.py" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      #- run:
      #    name: Tests
      #    command: |
      #      . venv/bin/activate
      #      python setup.py nosetests

      #- run:
      #    name: Linters
      #    command: |
      #      . venv/bin/activate
      #      ./lint/flake8 | tee lint_output

      - store_artifacts:
          path: install_dependencies_output
          destination: install_dependencies_output
            
      #- store_artifacts:
      #    path: nosetests.html
      #    destination: nosetests.html
          
      #- store_artifacts:
      #    path: lint_output
      #    destination: lint_output
